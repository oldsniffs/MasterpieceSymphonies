Proper Dev Process ---- unit testing, good proper commits
advance git usage

Then learn: corey schafer virtual env & django tutorial

Then: next commit for music project

Selenium video --- use for scrape?


3 Pillars , 3 Notesbooks

1. Short tutorials, tricks, methods

2. In-depth course-like material - Cory's django series, studio web + coding challenges + euler

3. Projects

(4.) Meta, career direction, lifestyle, etc



Misc Todos:
Appropriate durations currently excludes durations longer than bpm. This isn't stricly necessary, but those durations 
should probably be ID'd and weighted down.

If ties end up too numerous, can reduce occurences with a chance to select note that fits beat division
A method that finds a fitting duration, such as a dotted note, and applies it

Pitches following a short duration should jump less


Small Todos:
Remove all references to hand. Just use left or right

Big Todos:

Mid-song duration weight changes

complete_beat might need better respect for beat crossing rules

Implement accidentals
Multiple pitches per duration
Left Hand (more likely for "chords")


User Preferences:

Tempo
Time Signature
Keys
Average duration size
Note boundaries by hand
- Drop down list of notes, generated based on key
LH syncing
- get_syncs rolls between 1, 20-SYNC_THRESHOLD. This preference will change threshold
Extra exotics- time signature changes

Reduce overflow on or off (triggers a check to fill out a beat or measure instead of carryover)



Design Decision notes:

